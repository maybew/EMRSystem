package com.emrs.po;

// Generated 2012-10-31 9:28:52 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.json.JSONException;
import org.json.JSONObject;

/**
 * Patient generated by hbm2java
 */
@Entity
@Table(name = "patient")
public class Patient implements java.io.Serializable {

	private String pid;
	private String password;
	private String fname;
	private String lname;
	private Date birthdate;
	private Integer gender;
	private String email;
	private String address;
	private String phone;
	private String ename;
	private String eemail;
	private String eaddress;
	private String ephone;
	private Integer state;
	private Set<Record> records = new HashSet<Record>(0);

	public Patient() {
	}

	public Patient(String pid, String password, Date birthdate) {
		this.pid = pid;
		this.password = password;
		this.birthdate = birthdate;
	}

	public Patient(String pid, String password, String fname, String lname,
			Date birthdate, Integer gender, String email, String address,
			String phone, String ename, String eemail, String eaddress,
			String ephone, Integer state, Set<Record> records) {
		this.pid = pid;
		this.password = password;
		this.fname = fname;
		this.lname = lname;
		this.birthdate = birthdate;
		this.gender = gender;
		this.email = email;
		this.address = address;
		this.phone = phone;
		this.ename = ename;
		this.eemail = eemail;
		this.eaddress = eaddress;
		this.ephone = ephone;
		this.state = state;
		this.records = records;
	}

	@Id
	@Column(name = "pid", unique = true, nullable = false, length = 45)
	public String getPid() {
		return this.pid;
	}

	public void setPid(String pid) {
		this.pid = pid;
	}

	@Column(name = "password", nullable = false, length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "fname", length = 45)
	public String getFname() {
		return this.fname;
	}

	public void setFname(String fname) {
		this.fname = fname;
	}

	@Column(name = "lname", length = 45)
	public String getLname() {
		return this.lname;
	}

	public void setLname(String lname) {
		this.lname = lname;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "birthdate", nullable = false, length = 10)
	public Date getBirthdate() {
		return this.birthdate;
	}

	public void setBirthdate(Date birthdate) {
		this.birthdate = birthdate;
	}

	@Column(name = "gender")
	public Integer getGender() {
		return this.gender;
	}

	public void setGender(Integer gender) {
		this.gender = gender;
	}

	@Column(name = "email", length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "address", length = 100)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "phone", length = 45)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "ename", length = 45)
	public String getEname() {
		return this.ename;
	}

	public void setEname(String ename) {
		this.ename = ename;
	}

	@Column(name = "eemail", length = 45)
	public String getEemail() {
		return this.eemail;
	}

	public void setEemail(String eemail) {
		this.eemail = eemail;
	}

	@Column(name = "eaddress", length = 45)
	public String getEaddress() {
		return this.eaddress;
	}

	public void setEaddress(String eaddress) {
		this.eaddress = eaddress;
	}

	@Column(name = "ephone", length = 45)
	public String getEphone() {
		return this.ephone;
	}

	public void setEphone(String ephone) {
		this.ephone = ephone;
	}

	@Column(name = "state")
	public Integer getState() {
		return this.state;
	}

	public void setState(Integer state) {
		this.state = state;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<Record> getRecords() {
		return this.records;
	}

	public void setRecords(Set<Record> records) {
		this.records = records;
	}

	public JSONObject toJSON() {
		JSONObject json = new JSONObject();
		try {
			json.put("pid", this.getPid());
			json.put("pfname", this.getFname());
			json.put("plname", this.getLname());
			json.put("pemail", this.getEmail());
			json.put("pbirthday", this.getBirthdate());
			json.put("pgender", this.getGender());
			json.put("paddress", this.getAddress());
			json.put("pphone", this.getPhone());
			json.put("pename", this.getEname());
			json.put("peemail", this.getEemail());
			json.put("pephone", this.getEphone());
			json.put("peaddress", this.getEaddress());
		} catch (JSONException e) {
			e.printStackTrace();
		}
		return json;
	}

}
